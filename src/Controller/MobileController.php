<?php
declare(strict_types=1);

namespace App\Controller;

use Cake\Event\EventInterface;

/**
 * Mobile Controller
 *
 * @method \App\Model\Entity\Mobile[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class MobileController extends AppController
{

    public function beforeFilter(EventInterface $event)
    {
        parent::beforeFilter($event); // TODO: Change the autogenerated stub
        $this->Authentication->allowUnauthenticated(['login', 'anos']);
        $this->viewBuilder()->setLayout('json');
    }

    public function login()
    {
    }
    public function anos()
    {
        $this->LoadModel('Pits');
        $this->LoadModel('Documents');
        $siape = 1765127;
        $anosPit = $this->Pits->find('all', ['fields'=>['Pits.ano'], 'conditions'=>"Employees.siape = '$siape'", 'group'=>'Pits.ano'])->join(['table'=>'employees', 'alias'=>'Employees', 'type'=>'INNER', 'conditions'=>"Employees.id = Pits.employee_id"])->toArray();
        $anosDoc = $this->Documents->find('all', ['fields'=>['Ministers.ano'], 'conditions'=>"Employees.siape = '$siape'", 'group'=>'Ministers.ano'])->join(['table'=>'ministers', 'alias'=>'Ministers', 'type'=>'INNER', 'conditions'=>"Ministers.id = Documents.minister_id"])->join(['table'=>'employees', 'alias'=>'Employees', 'type'=>'INNER', 'conditions'=>"Employees.id = Ministers.employee_id"])->toArray();
        $anoPit = [];
        $cont = 0;
        foreach ($anosPit as $item){
            $anoPit[$cont] = $item['ano'];
            $cont += 1;
        }
        $anoDoc = [];
        $cont = 0;
        foreach ($anosDoc as $item){
            $anoDoc[$cont] = $item['Ministers']['ano'];
            $cont += 1;
        }
        $listAnos = array_unique(array_merge($anoDoc, $anoPit));
        rsort($listAnos);
        $listAnos = json_encode($listAnos);
        $this->set(compact('listAnos'));
    }
    public function lista()
    {
    }
//    anos
//    login
//    valores
}
